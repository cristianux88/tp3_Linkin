object Form1: TForm1
  Left = 390
  Height = 543
  Top = 88
  Width = 780
  Caption = 'Tp3 - Linkin'
  ClientHeight = 543
  ClientWidth = 780
  LCLVersion = '1.6.0.4'
  object Button1: TButton
    Left = 328
    Height = 33
    Top = 496
    Width = 80
    Caption = 'Cerrar'
    OnClick = Button1Click
    TabOrder = 0
  end
  object Label1: TLabel
    Left = 552
    Height = 46
    Top = 488
    Width = 161
    Alignment = taCenter
    Caption = 'Polinomios'#10'V0.1 primer commit '
    ParentColor = False
  end
  object Panel1: TPanel
    Left = 8
    Height = 464
    Top = 16
    Width = 760
    ClientHeight = 464
    ClientWidth = 760
    TabOrder = 1
    object Label2: TLabel
      Left = 8
      Height = 437
      Top = 8
      Width = 738
      Caption = 'Clases: '#10'1) VectorD.pas ------> 2) PolinD.pas'#10'3) MatrizD.pas'#10'4) unit_GUI.pas(Interfaz Grafica de Usuario)'#10#10#10'Propuesta: crear una clase (PolinD.pas) que herede de VectorD.pas,'#10'donde se agreguen los metodos propios de los polinomios'#10#10#10'Notas: '#10'N1: la ''D'' en la que terminan las clases es para indicar que las estructuras son dinamicas. '#10'N2:Dentro de VectorD y MatrizD hay documentacion, fijense en el constructor y operaciones.'#10'N3: existe un metodo para redimensionarlas en tiempo de ejecucion '#10'N4: vectord y matriz tienen metodos para mostrar su contenido con writeln'#10'N5: PolinD basicamente es un vector dinamico de extended'#10'N6: las raices deberian ser un objeto de la clase vectorD'#10'N7: si son complejos, serian dos vectores, uno para la parte real y otro para la parte '#10'compleja respectivamente de las N raices'
      ParentColor = False
      OnClick = Label2Click
    end
  end
  object Label3: TLabel
    Left = 72
    Height = 23
    Top = 496
    Width = 82
    Caption = 'Leeme.txt'
    ParentColor = False
  end
end
